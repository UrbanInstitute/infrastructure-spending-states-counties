{"title":"PERC - Exploratory data analysis","markdown":{"yaml":{"title":"PERC - Exploratory data analysis","format":{"html":{"code-fold":false,"code-summary":"Show the code","highlight-style":"github"}}},"headingText":"Libraries","containsRefs":false,"markdown":"\n\nWe have some preliminary data from Yonah Freemark for the PERC project and here I'd like to run through it a bit and see what we are working with. Yonah's email describes the structure of the Excel file and its tables like so:\n\n-   Dictionary: Explains the variables\n-   States: Information for each of the states (program funding levels could be put on map)\n-   Counties: Information for all counties (program funding levels could be put on map)\n-   State quintiles: Quintiles of funding for HUD and IIJA programs by underlying demographic characteristic (could be used for graph on sidebar)\n-   County quintiles: Quintiles of funding for HUD and IIJA programs by underlying demographic characteristic (could be used for graph on sidebar). Note that this is broken down for (a) all counties; (b) metro counties; (c) highly urbanized counties (which are a subset of metro counties)\n\n\nLet's load the libraries we'll need to explore this data.\n\n```{r}\n#| label: load-packages\n#| warning: false\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(here)\n# load tigris library for loading Census geographic files\nlibrary(tigris)\n# set option to use cache where possible\noptions(tigris_use_cache = TRUE)\n\n```\n\n## Load data tables\n\nLet's load each table in the sheet as a dataframe so we can see what we are working with.\n\n### Dictionary\n\n```{r}\n#| label: load-dictionary-table\ndictionary_table <- read_csv(here(\"data/output\", \"dictionary.csv\"))\n```\n\n### States\n\n```{r}\n#| label: load-states-table\nstates_table <- read_csv(here(\"data/output\", \"states.csv\"))\n```\n\n### Counties\n\n```{r}\n#| label: load-counties-table\ncounties_table <- read_csv(here(\"data/output\", \"counties.csv\"))\n```\n\n### State quintiles\n\nHUD funding:\n\n```{r}\n#| label: load-state-quintiles-hud-table\nstate_quintiles_hud_table <- read_csv(here(\"data/output\", \"state_quintiles_hud.csv\"))\n```\n\nIIJA funding:\n\n```{r}\n#| label: load-state-quintiles-iija-table\nstate_quintiles_iija_table <- read_csv(here(\"data/output\", \"state_quintiles_iija.csv\"))\n```\n\n### County quintiles\n\nHUD funding:\n\n```{r}\n#| label: load-county-quintiles-hud-table\ncounty_quintiles_hud_table <- read_csv(here(\"data/output\", \"county_quintiles_hud.csv\"))\n```\nIIJA funding:\n\n```{r}\n#| label: load-county-quintiles-iija-table\ncounty_quintiles_iija_table <- read_csv(here(\"data/output\", \"county_quintiles_iija.csv\"))\n```\n\n## Basic county and state distributions\n\nLet's just get a sense of the main 2 funding variables at the state and county level. Specifically, based on the dictionary, we want to look at `iija_formula_per_cap` and `hud_per_cap`. Although it seem that instead of a column for `iija_formula_per_cap` we have `iija_per_cap` in the state dataset. I am going to assume that this is the same variable with a different label for now.\n\n```{r}\n#| label: plot-state-distribution-iija\n#| warning: false\nstates_table %>% \n  ggplot(aes(x = iija_per_cap)) +\n  geom_histogram(binwidth = 200, fill = \"#1696D2\") +\n  theme_minimal() +\n  labs(\n    title = \"Distribution of State-level IIJA funding per capita\"\n  )\n```\n```{r}\n#| label: plot-state-distribution-hud\n#| warning: false\nstates_table %>% \n  ggplot(aes(x = hud_per_cap)) +\n  geom_histogram(binwidth = 200, fill = \"#1696D2\") +\n  theme_minimal() +\n  labs(\n    title = \"Distribution of State-level HUD funding per capita\"\n  )\n```\n\n```{r}\n#| label: plot-county-distribution-iija\n#| warning: false\ncounties_table %>% \n  ggplot(aes(x = iija_formula_per_cap)) +\n  geom_histogram(fill = \"#1696D2\") +\n  theme_minimal() +\n  labs(\n    title = \"Distribution of County-level IIJA funding per capita\"\n  )\n```\n```{r}\n#| label: plot-county-distribution-hud\n#| warning: false\ncounties_table %>% \n  ggplot(aes(x = hud_per_cap)) +\n  geom_histogram(fill = \"#1696D2\") +\n  theme_minimal() +\n  labs(\n    title = \"Distribution of County-level HUD funding per capita\"\n  )\n```\n\n## Clean up quintiles\n  \nIn order to visualize more easily, we need to re-organize the quintile data a bit. Let's start with the state-level data, since that is a bit easier.\n  \n```{r}\n#| label: clean-state-quintiles-hud\nstate_quintiles_hud_longer <- state_quintiles_hud_table %>% \n  pivot_longer(\n    cols = Q1:Q5,\n    names_to = \"quintile\",\n    values_to = \"funding_per_capita\",\n  ) %>%\n  mutate(\n    quintile = fct_rev(factor(quintile))\n  )\n```\n\n```{r}\n#| label: plot-state-quintiles-hud\nstate_quintiles_hud_longer %>%\n  ggplot(aes(x = funding_per_capita, y = quintile)) +\n  geom_col(fill = \"#1696D2\") +\n  facet_wrap(~ Item) +\n  theme_minimal() +\n  labs(\n    title = \"State-level HUD Funding per capita\"\n  )\n```\n\nNow let's do the same thing with the IIJA funding.\n\n```{r}\n#| label: clean-state-quintiles-iija\nstate_quintiles_iija_longer <- state_quintiles_iija_table %>% \n  pivot_longer(\n    cols = Q1:Q5,\n    names_to = \"quintile\",\n    values_to = \"funding_per_capita\",\n  ) %>%\n  mutate(\n    quintile = fct_rev(factor(quintile))\n  )\n```\n\nAnd let's plot those:\n  \n```{r}\n#| label: plot-state-quintiles-iija\nstate_quintiles_iija_longer %>%\n  ggplot(aes(x = funding_per_capita, y = quintile)) +\n  geom_col(fill=\"#1696D2\") +\n  facet_wrap(~ Item) +\n  theme_minimal() +\n  labs(\n    title = \"State-level IIJA Funding per capita\"\n  )\n```\n\n\nThe county-level quintiles have a few different subsets of counties:\n\n- `All counties`\n- `CBSA counties`\n- `Urban counties`\n\nWe'll probably need to plot each of these separately. For now, let's `pivot_longer()` like we did for the states. First up, HUD funding:\n\n```{r}\n#| label: clean-county-quintiles-hud\ncounty_quintiles_hud_longer <- county_quintiles_hud_table %>% \n  pivot_longer(\n    cols = Q1:Q5,\n    names_to = \"quintile\",\n    values_to = \"funding_per_capita\",\n  ) %>%\n  mutate(\n    quintile = fct_rev(factor(quintile)),\n    Subset = factor(Subset),\n    Item = factor(Item),\n  )\n```\n\nNow IIJA funding:\n\n```{r}\n#| label: clean-county-quintiles-iija\ncounty_quintiles_iija_longer <- county_quintiles_iija_table %>% \n  pivot_longer(\n    cols = Q1:Q5,\n    names_to = \"quintile\",\n    values_to = \"funding_per_capita\",\n  ) %>%\n  mutate(\n    quintile = fct_rev(factor(quintile)),\n    Subset = factor(Subset),\n    Item = factor(Item),\n  )\n```\n\n### Plotting subsets\n\nLet's write a function to plot each subset of counties and grab all the subsets themselves:\n\n```{r}\nplot_county_subset <- function(data, subset, funding_type) {\n  data %>%\n    filter(Subset == subset) %>%\n    ggplot(aes(x = funding_per_capita, y = quintile)) +\n    geom_col(fill=\"#1696D2\") +\n    facet_wrap(~ Item) +\n    theme_minimal() +\n    labs(\n      title = paste0(\"County-level \", funding_type, \" Funding per capita (\", subset, \")\")\n    )\n}\n\ncounty_subsets <- unique(county_quintiles_hud_longer$Subset)\n```\n\nAnd now let's plot each subset for HUD funding:\n\n```{r}\n#| label: plot-county-quintiles-hud\n\ncounty_subsets %>%\n  map(\\(subset) plot_county_subset(county_quintiles_hud_longer, subset, \"HUD\"))\n```\n\nAnd the same for IIJA funding:\n\n```{r}\n#| label: plot-county-quintiles-iija\ncounty_subsets %>%\n  map(\\(subset) plot_county_subset(county_quintiles_iija_longer, subset, \"IIJA\"))\n```\n\n## County funding maps\n\nThe main visual component of this tool will likely be a national map displaying funding per capita for different programs. Let's take a look at some of the data mapped out for reference.\n\nFirst let's grab some geographic data:\n```{r}\n#| warning: false\n# load geography, filter out territories other than PR and apply Alaska and Hawaii shift\ncounties_geo <- counties(cb = TRUE, year = 2020) %>% \n  filter(\n    as.numeric(STATEFP) == 72 | as.numeric(STATEFP) < 60\n  ) %>%\n  shift_geometry()\n\n# join data to geography\ncounties_joined <- counties_geo %>% left_join(counties_table, by = c(\"GEOID\"=\"FIPS\"))\n```\n\nNow let's map some of these numbers and see what they look like. First IIJA:\n\n```{r}\n#| warning: false\ncounties_joined %>% \n  ggplot(aes(fill = iija_formula_per_cap)) +\n  geom_sf() +\n  scale_fill_viridis_c(option = \"magma\", trans = \"log\") +\n  theme_void() +\n  labs(\n    title = \"IIJA funding per capita by county\"\n  )\n```\n\nNow HUD:\n\n```{r}\n#| warning: false\ncounties_joined %>% \n  ggplot(aes(fill = hud_per_cap)) +\n  geom_sf() +\n  scale_fill_viridis_c(option = \"magma\", trans = \"log10\") +\n  theme_void() +\n  labs(\n    title = \"HUD funding per capita by county\"\n  )\n```\n\nAnd we can look at the state level data too just for kicks. Let's prepare the geographic data:\n\n```{r}\n#| warning: false\nstates_geo <- states(cb = TRUE, year = 2020) %>% \n\tfilter(\n\t\tas.numeric(STATEFP) == 72 | as.numeric(STATEFP) < 60\n\t) %>%\n\tshift_geometry()\n\nstates_joined <- states_geo %>% left_join(states_table, by = c(\"GEOID\"=\"FIPS\"))\n```\n\nFirst HUD:\n\n```{r}\n#| warning: false\nstates_joined %>% \n  ggplot(aes(fill = hud_per_cap)) +\n  geom_sf() +\n  scale_fill_viridis_c(option = \"magma\", trans = \"log10\") +\n  theme_void() +\n  labs(\n    title = \"HUD funding per capita by states\"\n  )\n```\n\nThen IIJA:\n\n```{r}\n#| warning: false\nstates_joined %>% \n  ggplot(aes(fill = iija_per_cap)) +\n  geom_sf() +\n  scale_fill_viridis_c(option = \"magma\", trans = \"log10\") +\n  theme_void() +\n  labs(\n    title = \"IIJA funding per capita by states\"\n  )\n```\n## Need factors for programs \n\nThe research team also wants to explore the relationship between program funding and an array of \"need\" measures. One ideas discussed was to weight the funding and need as percentiles and use the ratio between the two percentiles to understand where programs are potentially over or under funded for a given geography.\n\nThe research team gave the following description alongside the data:\n\n<blockquote>\nProgram Tab: \n\n- Columns A-G provide details on each federal program included in the analysis\n- Columns H-J provides which equity index (reference index tab) will be primarily used to assess the equity implications for each program\n\nIndex Tab: \n\n- Column A list the index while Column B lists the indicators making up each index and Column C provides the data source\n</blockquote>\n\nFor starters, let's load in the spreadsheet they sent and count up how many variables we are looking at per program. Here's the program table:\n\n```{r}\n#| label: load-program-table\nprogram_table <- read_csv(here(\"data/output\", \"programs.csv\"))\n\n```\n\nThe index table's format leaves some empty cells for the `index_category`, and `indicator` columns, so let's fill those in along the way.\n\n```{r}\n#| label: load-need-measures-index\nneed_measure_index_table <- read_csv(here(\"data/output\", \"need_measure_index.csv\"))\n```\n\nNow let's count up the number of variables per program:\n\n```{r}\n#| label: count-need-measures\nindex_counts <- need_measure_index_table %>%\n  group_by(index_category, indicator) %>%\n\tsummarise(\n\t\tnumber_of_measures = n()\n\t) %>%\n  group_by(index_category) %>%\n  summarise(\n    number_of_measures = sum(number_of_measures),\n\t\tnumber_of_indicators = n()\n  )\n\nprogram_equity_measure_counts <- program_table %>% \n  left_join(index_counts, by = c(\"base_index\" = \"index_category\")) %>%\n  rename(\n     count_base_indicators = number_of_indicators,\n\t\t count_base_measures = number_of_measures\n  ) %>%\n  left_join(index_counts, by = c(\"primary_equity_index\" = \"index_category\")) %>%\n  rename(\n    count_equity_indicators = number_of_indicators,\n\t\tcount_equity_measures = number_of_measures\n  ) %>%\n  mutate(\n    total_indicators = count_base_indicators + count_equity_indicators,\n    total_measures = count_base_measures + count_equity_measures\n  )\t%>%\n  select(\n    type,\n    program_name,\n    total_indicators,\n    total_measures,\n  )\n\nprogram_equity_measure_counts %>%\n  arrange(desc(total_measures)) %>%\n  knitr::kable()\n\n```\n\n\nSo there are 116 individual programs in this data, and 15 baseline measures per program. Each program has an additional 2 to 9 equity measures, so we are looking at between 18 and 24 equity measures per program or thereabouts per program.\n\n```{r}\n#| label: plot-need-measures-summary\nprogram_equity_measure_counts %>%\n\tsummarise(\n\t\tnumber_of_programs = n(),\n\t\taverage_indicators = mean(total_indicators),\n\t\taverage_measures = mean(total_measures),\n\t) %>%\npivot_longer(cols=everything(), names_to=\"variable\", values_to=\"value\")\n\n```\n\n## County distributions\n\nLet's see how a given county compares when plotted against the funding distribution\n\n```{r}\n#| label: plot-county-distribution\n\nexample_county <- counties_table %>%\n\tslice_sample(n = 1)\n\ncounties_table %>%\n\tggplot(aes(x = hud_per_cap, y = 0)) +\n\tgeom_point(shape = 124, size = 10, alpha = 0.2, color = \"#5C5859\") +\n\tgeom_point(data = example_county, aes(x = hud_per_cap, y = 0), shape = 124, size = 10, color = \"#F2A900\") +\n\tgeom_text(data = example_county, aes(x = hud_per_cap, y = 0, label = paste(COUNTY, STATE, \" \")), nudge_y = 0.05, size = 10, hjust = \"left\") +\n\tylim(0, 1) +\n\ttheme_minimal()\n\n```\n\n## Dummy need measure data\n\nI'd like to prototype a visualization of need measures for a given program, so I'm going to create some dummy data to visualize for now.\n\n```{r}\n#| label: create-dummy-need-measures\n\n# for funding, we'll have a percentile rank for a given place, 1-100\nfunding_percentile <- floor(runif(1, min = 1, max = 100))\n\nexample_index_category <- \"Housing Production\"\n\ndummy_need_percentiles <- need_measure_index_table %>%\n\tfilter(\n\t  index_category == \"Baseline Index\" | index_category == example_index_category\n\t) %>%\n  select(indicator) %>%\n\tmutate(\n\t\tpercentile = floor(runif(n(), min = 1, max = 100)),\n\t\tfunding_percentile = funding_percentile,\n\t\tratio = funding_percentile / percentile\n\t) %>%\n\tarrange(ratio)\n\ndummy_need_percentiles$indicator <- factor(\n  dummy_need_percentiles$indicator,\n\tlevels = dummy_need_percentiles$indicator\n)\n\npoint_size <- 3\n\n\ndummy_need_percentiles %>% \n\tggplot() +\n\tgeom_segment(\n\t\taes(\n\t\t\tx = funding_percentile, \n\t\t\txend = percentile,\n\t\t\ty = indicator,\n\t\t\tyend = indicator\n\t\t),\n\t\tcolor = \"#dcdbdb\", linewidth = 2\n\t) + \n\tgeom_point(\n\t\taes(\n\t\t\tx = funding_percentile,\n\t\t\ty = indicator\n\t\t),\n\t\tcolor = \"#fdbf11\", size = point_size\n\t) +\n\tgeom_point(\n\t\taes(\n\t\t\tx = percentile,\n\t\t\ty = indicator\n\t\t),\n\t\tcolor = \"#1696d2\", size = point_size\n\t) +\n\ttheme_minimal() +\n\ttheme(\n\t\tpanel.grid.major.y = element_blank(),\n\t) +\n\txlab(\"Percentile\")\n\n```\n\n## Program summary data\n\nWhat about some scatterplots of county funding levels vs various other metrics? this could be similar to quintile plots but with more detail\n","srcMarkdownNoYaml":"\n\nWe have some preliminary data from Yonah Freemark for the PERC project and here I'd like to run through it a bit and see what we are working with. Yonah's email describes the structure of the Excel file and its tables like so:\n\n-   Dictionary: Explains the variables\n-   States: Information for each of the states (program funding levels could be put on map)\n-   Counties: Information for all counties (program funding levels could be put on map)\n-   State quintiles: Quintiles of funding for HUD and IIJA programs by underlying demographic characteristic (could be used for graph on sidebar)\n-   County quintiles: Quintiles of funding for HUD and IIJA programs by underlying demographic characteristic (could be used for graph on sidebar). Note that this is broken down for (a) all counties; (b) metro counties; (c) highly urbanized counties (which are a subset of metro counties)\n\n## Libraries\n\nLet's load the libraries we'll need to explore this data.\n\n```{r}\n#| label: load-packages\n#| warning: false\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(here)\n# load tigris library for loading Census geographic files\nlibrary(tigris)\n# set option to use cache where possible\noptions(tigris_use_cache = TRUE)\n\n```\n\n## Load data tables\n\nLet's load each table in the sheet as a dataframe so we can see what we are working with.\n\n### Dictionary\n\n```{r}\n#| label: load-dictionary-table\ndictionary_table <- read_csv(here(\"data/output\", \"dictionary.csv\"))\n```\n\n### States\n\n```{r}\n#| label: load-states-table\nstates_table <- read_csv(here(\"data/output\", \"states.csv\"))\n```\n\n### Counties\n\n```{r}\n#| label: load-counties-table\ncounties_table <- read_csv(here(\"data/output\", \"counties.csv\"))\n```\n\n### State quintiles\n\nHUD funding:\n\n```{r}\n#| label: load-state-quintiles-hud-table\nstate_quintiles_hud_table <- read_csv(here(\"data/output\", \"state_quintiles_hud.csv\"))\n```\n\nIIJA funding:\n\n```{r}\n#| label: load-state-quintiles-iija-table\nstate_quintiles_iija_table <- read_csv(here(\"data/output\", \"state_quintiles_iija.csv\"))\n```\n\n### County quintiles\n\nHUD funding:\n\n```{r}\n#| label: load-county-quintiles-hud-table\ncounty_quintiles_hud_table <- read_csv(here(\"data/output\", \"county_quintiles_hud.csv\"))\n```\nIIJA funding:\n\n```{r}\n#| label: load-county-quintiles-iija-table\ncounty_quintiles_iija_table <- read_csv(here(\"data/output\", \"county_quintiles_iija.csv\"))\n```\n\n## Basic county and state distributions\n\nLet's just get a sense of the main 2 funding variables at the state and county level. Specifically, based on the dictionary, we want to look at `iija_formula_per_cap` and `hud_per_cap`. Although it seem that instead of a column for `iija_formula_per_cap` we have `iija_per_cap` in the state dataset. I am going to assume that this is the same variable with a different label for now.\n\n```{r}\n#| label: plot-state-distribution-iija\n#| warning: false\nstates_table %>% \n  ggplot(aes(x = iija_per_cap)) +\n  geom_histogram(binwidth = 200, fill = \"#1696D2\") +\n  theme_minimal() +\n  labs(\n    title = \"Distribution of State-level IIJA funding per capita\"\n  )\n```\n```{r}\n#| label: plot-state-distribution-hud\n#| warning: false\nstates_table %>% \n  ggplot(aes(x = hud_per_cap)) +\n  geom_histogram(binwidth = 200, fill = \"#1696D2\") +\n  theme_minimal() +\n  labs(\n    title = \"Distribution of State-level HUD funding per capita\"\n  )\n```\n\n```{r}\n#| label: plot-county-distribution-iija\n#| warning: false\ncounties_table %>% \n  ggplot(aes(x = iija_formula_per_cap)) +\n  geom_histogram(fill = \"#1696D2\") +\n  theme_minimal() +\n  labs(\n    title = \"Distribution of County-level IIJA funding per capita\"\n  )\n```\n```{r}\n#| label: plot-county-distribution-hud\n#| warning: false\ncounties_table %>% \n  ggplot(aes(x = hud_per_cap)) +\n  geom_histogram(fill = \"#1696D2\") +\n  theme_minimal() +\n  labs(\n    title = \"Distribution of County-level HUD funding per capita\"\n  )\n```\n\n## Clean up quintiles\n  \nIn order to visualize more easily, we need to re-organize the quintile data a bit. Let's start with the state-level data, since that is a bit easier.\n  \n```{r}\n#| label: clean-state-quintiles-hud\nstate_quintiles_hud_longer <- state_quintiles_hud_table %>% \n  pivot_longer(\n    cols = Q1:Q5,\n    names_to = \"quintile\",\n    values_to = \"funding_per_capita\",\n  ) %>%\n  mutate(\n    quintile = fct_rev(factor(quintile))\n  )\n```\n\n```{r}\n#| label: plot-state-quintiles-hud\nstate_quintiles_hud_longer %>%\n  ggplot(aes(x = funding_per_capita, y = quintile)) +\n  geom_col(fill = \"#1696D2\") +\n  facet_wrap(~ Item) +\n  theme_minimal() +\n  labs(\n    title = \"State-level HUD Funding per capita\"\n  )\n```\n\nNow let's do the same thing with the IIJA funding.\n\n```{r}\n#| label: clean-state-quintiles-iija\nstate_quintiles_iija_longer <- state_quintiles_iija_table %>% \n  pivot_longer(\n    cols = Q1:Q5,\n    names_to = \"quintile\",\n    values_to = \"funding_per_capita\",\n  ) %>%\n  mutate(\n    quintile = fct_rev(factor(quintile))\n  )\n```\n\nAnd let's plot those:\n  \n```{r}\n#| label: plot-state-quintiles-iija\nstate_quintiles_iija_longer %>%\n  ggplot(aes(x = funding_per_capita, y = quintile)) +\n  geom_col(fill=\"#1696D2\") +\n  facet_wrap(~ Item) +\n  theme_minimal() +\n  labs(\n    title = \"State-level IIJA Funding per capita\"\n  )\n```\n\n\nThe county-level quintiles have a few different subsets of counties:\n\n- `All counties`\n- `CBSA counties`\n- `Urban counties`\n\nWe'll probably need to plot each of these separately. For now, let's `pivot_longer()` like we did for the states. First up, HUD funding:\n\n```{r}\n#| label: clean-county-quintiles-hud\ncounty_quintiles_hud_longer <- county_quintiles_hud_table %>% \n  pivot_longer(\n    cols = Q1:Q5,\n    names_to = \"quintile\",\n    values_to = \"funding_per_capita\",\n  ) %>%\n  mutate(\n    quintile = fct_rev(factor(quintile)),\n    Subset = factor(Subset),\n    Item = factor(Item),\n  )\n```\n\nNow IIJA funding:\n\n```{r}\n#| label: clean-county-quintiles-iija\ncounty_quintiles_iija_longer <- county_quintiles_iija_table %>% \n  pivot_longer(\n    cols = Q1:Q5,\n    names_to = \"quintile\",\n    values_to = \"funding_per_capita\",\n  ) %>%\n  mutate(\n    quintile = fct_rev(factor(quintile)),\n    Subset = factor(Subset),\n    Item = factor(Item),\n  )\n```\n\n### Plotting subsets\n\nLet's write a function to plot each subset of counties and grab all the subsets themselves:\n\n```{r}\nplot_county_subset <- function(data, subset, funding_type) {\n  data %>%\n    filter(Subset == subset) %>%\n    ggplot(aes(x = funding_per_capita, y = quintile)) +\n    geom_col(fill=\"#1696D2\") +\n    facet_wrap(~ Item) +\n    theme_minimal() +\n    labs(\n      title = paste0(\"County-level \", funding_type, \" Funding per capita (\", subset, \")\")\n    )\n}\n\ncounty_subsets <- unique(county_quintiles_hud_longer$Subset)\n```\n\nAnd now let's plot each subset for HUD funding:\n\n```{r}\n#| label: plot-county-quintiles-hud\n\ncounty_subsets %>%\n  map(\\(subset) plot_county_subset(county_quintiles_hud_longer, subset, \"HUD\"))\n```\n\nAnd the same for IIJA funding:\n\n```{r}\n#| label: plot-county-quintiles-iija\ncounty_subsets %>%\n  map(\\(subset) plot_county_subset(county_quintiles_iija_longer, subset, \"IIJA\"))\n```\n\n## County funding maps\n\nThe main visual component of this tool will likely be a national map displaying funding per capita for different programs. Let's take a look at some of the data mapped out for reference.\n\nFirst let's grab some geographic data:\n```{r}\n#| warning: false\n# load geography, filter out territories other than PR and apply Alaska and Hawaii shift\ncounties_geo <- counties(cb = TRUE, year = 2020) %>% \n  filter(\n    as.numeric(STATEFP) == 72 | as.numeric(STATEFP) < 60\n  ) %>%\n  shift_geometry()\n\n# join data to geography\ncounties_joined <- counties_geo %>% left_join(counties_table, by = c(\"GEOID\"=\"FIPS\"))\n```\n\nNow let's map some of these numbers and see what they look like. First IIJA:\n\n```{r}\n#| warning: false\ncounties_joined %>% \n  ggplot(aes(fill = iija_formula_per_cap)) +\n  geom_sf() +\n  scale_fill_viridis_c(option = \"magma\", trans = \"log\") +\n  theme_void() +\n  labs(\n    title = \"IIJA funding per capita by county\"\n  )\n```\n\nNow HUD:\n\n```{r}\n#| warning: false\ncounties_joined %>% \n  ggplot(aes(fill = hud_per_cap)) +\n  geom_sf() +\n  scale_fill_viridis_c(option = \"magma\", trans = \"log10\") +\n  theme_void() +\n  labs(\n    title = \"HUD funding per capita by county\"\n  )\n```\n\nAnd we can look at the state level data too just for kicks. Let's prepare the geographic data:\n\n```{r}\n#| warning: false\nstates_geo <- states(cb = TRUE, year = 2020) %>% \n\tfilter(\n\t\tas.numeric(STATEFP) == 72 | as.numeric(STATEFP) < 60\n\t) %>%\n\tshift_geometry()\n\nstates_joined <- states_geo %>% left_join(states_table, by = c(\"GEOID\"=\"FIPS\"))\n```\n\nFirst HUD:\n\n```{r}\n#| warning: false\nstates_joined %>% \n  ggplot(aes(fill = hud_per_cap)) +\n  geom_sf() +\n  scale_fill_viridis_c(option = \"magma\", trans = \"log10\") +\n  theme_void() +\n  labs(\n    title = \"HUD funding per capita by states\"\n  )\n```\n\nThen IIJA:\n\n```{r}\n#| warning: false\nstates_joined %>% \n  ggplot(aes(fill = iija_per_cap)) +\n  geom_sf() +\n  scale_fill_viridis_c(option = \"magma\", trans = \"log10\") +\n  theme_void() +\n  labs(\n    title = \"IIJA funding per capita by states\"\n  )\n```\n## Need factors for programs \n\nThe research team also wants to explore the relationship between program funding and an array of \"need\" measures. One ideas discussed was to weight the funding and need as percentiles and use the ratio between the two percentiles to understand where programs are potentially over or under funded for a given geography.\n\nThe research team gave the following description alongside the data:\n\n<blockquote>\nProgram Tab: \n\n- Columns A-G provide details on each federal program included in the analysis\n- Columns H-J provides which equity index (reference index tab) will be primarily used to assess the equity implications for each program\n\nIndex Tab: \n\n- Column A list the index while Column B lists the indicators making up each index and Column C provides the data source\n</blockquote>\n\nFor starters, let's load in the spreadsheet they sent and count up how many variables we are looking at per program. Here's the program table:\n\n```{r}\n#| label: load-program-table\nprogram_table <- read_csv(here(\"data/output\", \"programs.csv\"))\n\n```\n\nThe index table's format leaves some empty cells for the `index_category`, and `indicator` columns, so let's fill those in along the way.\n\n```{r}\n#| label: load-need-measures-index\nneed_measure_index_table <- read_csv(here(\"data/output\", \"need_measure_index.csv\"))\n```\n\nNow let's count up the number of variables per program:\n\n```{r}\n#| label: count-need-measures\nindex_counts <- need_measure_index_table %>%\n  group_by(index_category, indicator) %>%\n\tsummarise(\n\t\tnumber_of_measures = n()\n\t) %>%\n  group_by(index_category) %>%\n  summarise(\n    number_of_measures = sum(number_of_measures),\n\t\tnumber_of_indicators = n()\n  )\n\nprogram_equity_measure_counts <- program_table %>% \n  left_join(index_counts, by = c(\"base_index\" = \"index_category\")) %>%\n  rename(\n     count_base_indicators = number_of_indicators,\n\t\t count_base_measures = number_of_measures\n  ) %>%\n  left_join(index_counts, by = c(\"primary_equity_index\" = \"index_category\")) %>%\n  rename(\n    count_equity_indicators = number_of_indicators,\n\t\tcount_equity_measures = number_of_measures\n  ) %>%\n  mutate(\n    total_indicators = count_base_indicators + count_equity_indicators,\n    total_measures = count_base_measures + count_equity_measures\n  )\t%>%\n  select(\n    type,\n    program_name,\n    total_indicators,\n    total_measures,\n  )\n\nprogram_equity_measure_counts %>%\n  arrange(desc(total_measures)) %>%\n  knitr::kable()\n\n```\n\n\nSo there are 116 individual programs in this data, and 15 baseline measures per program. Each program has an additional 2 to 9 equity measures, so we are looking at between 18 and 24 equity measures per program or thereabouts per program.\n\n```{r}\n#| label: plot-need-measures-summary\nprogram_equity_measure_counts %>%\n\tsummarise(\n\t\tnumber_of_programs = n(),\n\t\taverage_indicators = mean(total_indicators),\n\t\taverage_measures = mean(total_measures),\n\t) %>%\npivot_longer(cols=everything(), names_to=\"variable\", values_to=\"value\")\n\n```\n\n## County distributions\n\nLet's see how a given county compares when plotted against the funding distribution\n\n```{r}\n#| label: plot-county-distribution\n\nexample_county <- counties_table %>%\n\tslice_sample(n = 1)\n\ncounties_table %>%\n\tggplot(aes(x = hud_per_cap, y = 0)) +\n\tgeom_point(shape = 124, size = 10, alpha = 0.2, color = \"#5C5859\") +\n\tgeom_point(data = example_county, aes(x = hud_per_cap, y = 0), shape = 124, size = 10, color = \"#F2A900\") +\n\tgeom_text(data = example_county, aes(x = hud_per_cap, y = 0, label = paste(COUNTY, STATE, \" \")), nudge_y = 0.05, size = 10, hjust = \"left\") +\n\tylim(0, 1) +\n\ttheme_minimal()\n\n```\n\n## Dummy need measure data\n\nI'd like to prototype a visualization of need measures for a given program, so I'm going to create some dummy data to visualize for now.\n\n```{r}\n#| label: create-dummy-need-measures\n\n# for funding, we'll have a percentile rank for a given place, 1-100\nfunding_percentile <- floor(runif(1, min = 1, max = 100))\n\nexample_index_category <- \"Housing Production\"\n\ndummy_need_percentiles <- need_measure_index_table %>%\n\tfilter(\n\t  index_category == \"Baseline Index\" | index_category == example_index_category\n\t) %>%\n  select(indicator) %>%\n\tmutate(\n\t\tpercentile = floor(runif(n(), min = 1, max = 100)),\n\t\tfunding_percentile = funding_percentile,\n\t\tratio = funding_percentile / percentile\n\t) %>%\n\tarrange(ratio)\n\ndummy_need_percentiles$indicator <- factor(\n  dummy_need_percentiles$indicator,\n\tlevels = dummy_need_percentiles$indicator\n)\n\npoint_size <- 3\n\n\ndummy_need_percentiles %>% \n\tggplot() +\n\tgeom_segment(\n\t\taes(\n\t\t\tx = funding_percentile, \n\t\t\txend = percentile,\n\t\t\ty = indicator,\n\t\t\tyend = indicator\n\t\t),\n\t\tcolor = \"#dcdbdb\", linewidth = 2\n\t) + \n\tgeom_point(\n\t\taes(\n\t\t\tx = funding_percentile,\n\t\t\ty = indicator\n\t\t),\n\t\tcolor = \"#fdbf11\", size = point_size\n\t) +\n\tgeom_point(\n\t\taes(\n\t\t\tx = percentile,\n\t\t\ty = indicator\n\t\t),\n\t\tcolor = \"#1696d2\", size = point_size\n\t) +\n\ttheme_minimal() +\n\ttheme(\n\t\tpanel.grid.major.y = element_blank(),\n\t) +\n\txlab(\"Percentile\")\n\n```\n\n## Program summary data\n\nWhat about some scatterplots of county funding levels vs various other metrics? this could be similar to quintile plots but with more detail\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","highlight-style":"github","output-file":"PERC-data-exploration.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Show the code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.340","title":"PERC - Exploratory data analysis"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":[]}